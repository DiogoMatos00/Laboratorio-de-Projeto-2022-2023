/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views.ListarPerguntas;

import Controller.listagem_de_perguntas;

import Views.AddQuestion.*;
import Views.PopupConfirmacao.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.util.List;

/**
 *
 * @author vasco
 */
public class JFrameListaUC extends JFrame {

    /**
     * Creates new form JFrameListaUC
     */
    public JFrameListaUC() throws SQLException {
        initComponents();
        setDefaultCloseOperation(JFrameAddPergunta.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws SQLException {

        jLabelListaUC = new JLabel();
        jScrollPaneListaUC = new JScrollPane();
        botaoAdicionarUC = new JButton();
        botaoApagarUC = new JButton();
        botaoBack = new JButton();


        jTable1 = new JTable();
        DefaultTableModel dtm = new DefaultTableModel(0,0){
            public boolean isCellEditable(int row, int column)
            {
                return false;//This causes all cells to be not editable
            }
        };

        String header[] = new String[] {"ID", "Unidade Curricular"};

        dtm.setColumnIdentifiers(header);
        jTable1.setModel(dtm);

        List<List<String>> uc = listagem_de_perguntas.getSubjectsandId();
        for(int i = 0; i < uc.size(); i++){
            List<String> a = uc.get(i);
            dtm.addRow(new Object[]{a.get(0), a.get(1)});
        }

        jTable1.getTableHeader().setResizingAllowed(false);
        TableColumn column1 = jTable1.getColumnModel().getColumn(0);
        column1.setPreferredWidth(30);
        TableColumn column2 = jTable1.getColumnModel().getColumn(1);
        column2.setPreferredWidth(300);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPaneListaUC.setViewportView(jTable1);

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jLabelListaUC.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabelListaUC.setText("Lista de Unidades Curriculares");


         jTable1.getTableHeader().setReorderingAllowed(false); 
        jScrollPaneListaUC.setViewportView(jTable1);

        




        jTable1.getTableHeader().setReorderingAllowed(false); 



        botaoAdicionarUC.setText("Adicionar");
        botaoAdicionarUC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                botaoAdicionarUCActionPerformed(evt);
            }
        });

        botaoApagarUC.setText("Apagar");
        botaoApagarUC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                if(jTable1.isRowSelected(jTable1.getSelectedRow())) {
                    String id = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
                    botaoApagarUCActionPerformed(evt, id);
                }
            }
        });

        botaoBack.setText("Back");
        botaoBack.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(ActionEvent evt){
                JFrameMenuListarPerguntas jf0;
                try {
                    jf0 = new JFrameMenuListarPerguntas ();
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
                jf0.show(); //display
                dispose();
            }
        });


        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabelListaUC)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPaneListaUC, GroupLayout.PREFERRED_SIZE, 436, GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoAdicionarUC, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoBack)
                        .addGap(93, 93, 93)
                        .addComponent(botaoApagarUC, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabelListaUC)

                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneListaUC, GroupLayout.PREFERRED_SIZE, 350, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAdicionarUC, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoApagarUC, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                        .addComponent(botaoBack, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))

        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAdicionarUCActionPerformed(ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarUCActionPerformed
        // TODO add your handling code here:

        JFramePopupAdicionarUC jf1 = new JFramePopupAdicionarUC();
        jf1.show(); //display JFrameMenuListarPerguntas

        dispose(); //fechar o frame atual
        
    }//GEN-LAST:event_botaoAdicionarUCActionPerformed

    private void botaoApagarUCActionPerformed(ActionEvent evt, String id) {//GEN-FIRST:event_botaoApagarUCActionPerformed
        // TODO add your handling code here:
           JFramePopupConfirmarUC jf1 = new JFramePopupConfirmarUC(id);
           jf1.show(); //display JFrameMenuQuizManual
           dispose();
    }//GEN-LAST:event_botaoApagarUCActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameListaUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameListaUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameListaUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameListaUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameListaUC().setVisible(true);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton botaoAdicionarUC;
    private JButton botaoApagarUC;
    private JLabel jLabelListaUC;
    private JScrollPane jScrollPaneListaUC;
    private JTable jTable1;
    private JButton botaoBack;
    // End of variables declaration//GEN-END:variables
}
